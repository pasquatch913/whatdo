{
  "version": "0.1.0",
  "dependencies": {
    "gamma": "",
    "bessel": "",
    "frac": "",
    "voc": ""
  },
  "name": "maths",
  "author": {
    "name": "SheetJS"
  },
  "description": "Panoply of Math Functions for NodeJS",
  "keywords": [
    "math",
    "maths",
    "specfun",
    "scimath"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/SheetJS/maths.git"
  },
  "main": "maths.js",
  "readme": "maths\n=====\n\nPanoply of Math Functions for NodeJS.\n\nTo build this, `npm install -g voc` and `voc README.md`\n\n# Code\n\n```json>package.json\n{\n  \"version\": \"0.1.0\",\n  \"dependencies\": {\n```\n\n## Gamma Function\n\n[substack's gamma library](https://npmjs.org/package/gamma) provides the regular\ngamma function:\n\n```json>package.json\n    \"gamma\":\"\",\n```\n\nThe `gamma` function takes a single real parameter.\n\n```js>maths.js\nvar gamma = require('gamma');\nexports.gamma = gamma;\n```\n\nBoth matlab and Excel use the function name `gammaln` to refer to the natural \nlog of the gamma function. Mathematica uses the name `LogGamma` and scipy uses \nthe name `loggamma`.  Both names will be used:\n\n```\nexports.gammaln = gamma.log;\nexports.loggamma = gamma.log;\n```\n\n## Gamma's Friends\n\nThe regular beta function is a straightforward manipulation of gamma:\n\n```js>maths.js\nvar beta = function(a,b) { return (gamma(a)*gamma(b))/gamma(a+b); };\nvar betaln = function(a,b) { return gamma.log(a)+gamma.log(b)-gamma.log(a+b); };\nbeta.log = betaln;\nexports.beta = beta;\nexports.betaln = betaln;\n```\n\nThe lesser-known Pochhammer symbol is even simpler (uses Mathematica order):\n\n```\nvar pochhammer = function(a,n) { return gamma(a+n) / gamma(a); };\nvar pochhammerln = function(a,n) { return gamma.log(a+n) - gamma.log(a); };\npochhammer.log = pochhammerln;\nexports.pochhammer = pochhammer;\nexports.pochhammerln = pochhammerln;\n```\n\n\n## Bessel Functions\n\n[SheetJS's bessel library](https://npmjs.org/package/gamma) provides the Bessel\nfunctions:\n\n```json>package.json\n    \"bessel\":\"\",\n```\n\nThe bessel functions accept the parameters `(x, n)` where `n` is the order of \nthe solution and `x` is the point at which to evaluate:\n\n```js>maths.js\nvar bessel = require('bessel');\nexports.besselj = bessel.besselj;\nexports.bessely = bessel.bessely;\nexports.besseli = bessel.besseli;\nexports.besselk = bessel.besselk;\n```\n\n## Fractions\n\n[SheetJS's frac library](https://npm.im/frac) provides the frac function for\nrational approximations to numbers:\n\n```json>package.json\n    \"frac\":\"\",\n```\n\nThe frac function accept the parameters `(x, D, m)` where `x` is the number you\nwish to approximate, `D` is an upper bound on the denominator, and `m` is a flag\nindicating that you want mixed rather than improper fractions:\n\n```js>maths.js\nvar frac = require('frac');\nexports.frac = frac;\n```\n\n## Miscellaneous\n\n```json>package.json\n    \"voc\":\"\"\n  },\n  \"name\": \"maths\",\n  \"author\": \"SheetJS\",\n  \"description\": \"Panoply of Math Functions for NodeJS\",\n  \"keywords\": [\"math\", \"maths\", \"specfun\", \"scimath\"],\n  \"repository\":{ \"type\": \"git\", \"url\": \"https://github.com/SheetJS/maths.git\" },\n  \"main\": \"maths.js\"\n}\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/SheetJS/maths/issues"
  },
  "homepage": "https://github.com/SheetJS/maths",
  "_id": "maths@0.1.0",
  "dist": {
    "shasum": "7302cfb414772fecc689df5c2946a4aef529fbf0",
    "tarball": "https://registry.npmjs.org/maths/-/maths-0.1.0.tgz"
  },
  "_from": "maths@latest",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "sheetjs",
    "email": "dev@sheetjs.com"
  },
  "maintainers": [
    {
      "name": "sheetjs",
      "email": "dev@sheetjs.com"
    }
  ],
  "directories": {},
  "_shasum": "7302cfb414772fecc689df5c2946a4aef529fbf0",
  "_resolved": "http://registry.npmjs.org/maths/-/maths-0.1.0.tgz"
}
